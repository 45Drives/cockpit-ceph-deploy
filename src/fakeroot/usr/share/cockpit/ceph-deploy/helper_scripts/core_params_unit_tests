#!/usr/bin/env python3

import sys
import subprocess
import json
import os

def run_core_params(options = ["--show-existing"],params = None):
	script_path = "/home/mark/dev/cockpit-ceph-deploy/src/fakeroot/usr/share/cockpit/ceph-deploy/helper_scripts/core_params"
	if params != None:
		command_list = [script_path,"-p",json.dumps(params)]
		for option in options:
			command_list.append(option)
		try:
			return_code = subprocess.run(command_list).returncode
		except:
			print("####################################################################")
			print("FAILED TO RUN SCRIPT")
			print("####################################################################")
			sys.exit(1)
		if return_code != 0:
			print("####################################################################")
			print("SCRIPT FAILED")
			print("####################################################################")
	else:
		command_list = [script_path]
		for option in options:
			command_list.append(option)
		try:
			return_code = subprocess.run(command_list).returncode
		except:
			print("####################################################################")
			print("FAILED TO RUN SCRIPT")
			print("####################################################################")
			sys.exit(1)
		if return_code != 0:
			print("####################################################################")
			print("SCRIPT FAILED")
			print("####################################################################")

def main():
	param_reference = {
		"hosts": {
			"ubuntuosd1":{
				"hostname": "ubuntuosd1",
				"ip": "192.168.13.13/16",
				"monitor_interface": "ens3"
			},
			"ubuntuosd2":{
				"hostname": "ubuntuosd2",
				"ip": "192.168.13.14/16",
				"monitor_interface": "ens3"
			},
			"ubuntuosd3":{
				"hostname": "ubuntuosd3",
				"ip": "192.168.13.15/16",
				"monitor_interface": "ens3"
			}
		},
		"roles": {
			"mons": [
				"ubuntuosd1",
				"ubuntuosd2",
				"ubuntuosd3"
			],
			"mgrs": [
				"ubuntuosd1",
				"ubuntuosd2",
				"ubuntuosd3"
			],
			"osds": [
				"ubuntuosd1",
				"ubuntuosd2",
				"ubuntuosd3"
			],
			"metrics": [
				"ubuntuosd1"
			],
			"mdss": [],
			"smbs": [],
			"nfss": [],
			"iscsigws": [],
			"rgws": [],
			"rgwloadbalancers": [],
			"client": []
		},
		"options": {
			"monitor_interface": "ens3",
			"public_network": "192.168.0.0/16",
			"cluster_network": "192.168.0.0/16",
			"hybrid_cluster": None
		}
	}

	#############################################################################################################
	# SETUP
	#############################################################################################################
	test_count = 0
	if os.path.exists("/usr/share/cockpit/ceph-deploy/params/core_params.json"):
		os.remove("/usr/share/cockpit/ceph-deploy/params/core_params.json")

	#############################################################################################################
	# TEST 1
	#############################################################################################################
	test_params = {
		"hosts":{
			"ubuntuosd1":{
				"hostname":"ubuntuosd1",
				"ip":"192.168.13.13/16",
				"monitor_interface":"ens3"
			}
		},
		"roles": {
			"mons": [
				"ubuntuosd1",
			],
			"mgrs": [
				"ubuntuosd1",
			],
			"osds": [
				"ubuntuosd1"
			]
		},
		"options":{
			"monitor_interface":"eno1"
		}
	}

	test_options = ["-h",json.dumps(test_params["hosts"]),"-r",json.dumps(test_params["roles"]),"-o",json.dumps(test_params["options"]),"-w"]

	test_count += 1
	print("############################  TEST {t}  ##############################".format(t=test_count))
	run_core_params(test_options)
	print("####################################################################")

	#############################################################################################################
	# TEST 2
	#############################################################################################################
	test_params = {
		"hosts":{
			"ubuntuosd2":{
			}
		},
		"roles": {
			"mons": [
				"ubuntuosd2",
			],
			"mgrs": [
				"ubuntuosd2",
			],
			"osds": [
				"ubuntuosd2"
			]
		}
	}

	test_options = ["-h",json.dumps(test_params["hosts"]),"-r",json.dumps(test_params["roles"]),"-w"]

	test_count += 1
	print("############################  TEST {t}  ##############################".format(t=test_count))
	run_core_params(test_options)
	print("####################################################################")


	#############################################################################################################
	# TEST 3
	#############################################################################################################
	test_params = {
		"roles": {
			"mons": [
				"ubuntuosd2",
			],
			"mgrs": [
				"ubuntuosd2",
			]
		}
	}

	test_options = ["-r",json.dumps(test_params["roles"]),"-x"]

	test_count += 1
	print("############################  TEST {t}  ##############################".format(t=test_count))
	run_core_params(test_options)
	print("####################################################################")

	#############################################################################################################
	# TEST 4
	#############################################################################################################
	test_params = {
		"roles": {
			"metrics": [
				"ubuntuosd1"
			]
		}
	}

	test_options = ["-r",json.dumps(test_params["roles"]),"-w"]

	test_count += 1
	print("############################  TEST {t}  ##############################".format(t=test_count))
	run_core_params(test_options)
	print("####################################################################")




if __name__ == "__main__":
	main()
